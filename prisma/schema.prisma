// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("NEXT_PUBLIC_DATABASE_URL")
}

model Note {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String?
  userId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("notes")
}

model Experience {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  company   String
  companyLogo String?
  position  String
  techStack String[]
  link      String?
  image     String?
  order     Int       @default(0)
  content   String?
  dates     String
  isFeatured Boolean  @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  technologies TechnologiesOnExperiences[]
  @@map("experiences")
}

model Technology {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  logo      String?
  categories String[]
  isFeatured Boolean  @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  experiences TechnologiesOnExperiences[]
  @@map("Technology")
}

model TechnologiesOnExperiences {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  experience    Experience @relation(fields: [experienceId], references: [id])
  experienceId  String    @db.ObjectId
  
  technology    Technology @relation(fields: [technologyId], references: [id])
  technologyId  String    @db.ObjectId
  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}